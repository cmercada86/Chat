CREATE TABLE "user_table"
(
    id character varying(100) NOT NULL,
    name character varying(100) NOT NULL,
    firstname character varying(200),
    lastname character varying(200),
    date_added date,
    picture character varying(300),
    locale character varying(200),
    CONSTRAINT userinfo_pkey PRIMARY KEY (id)
)
WITH (OIDS=FALSE);


CREATE TABLE "chat_table"
(
    uid uuid NOT NULL,
    user_id character varying(100) NOT NULL,
    timestamp date,
    room character varying(200) NOT NULL,
    message character varying(1000) NOT NULL,
    CONSTRAINT chat_pkey PRIMARY KEY (uid)
)
WITH (OIDS=FALSE);


CREATE TABLE "dm_table"
(
    uid uuid NOT NULL,
    sender_id character varying(100) NOT NULL,
    timestamp date,
    receiver_id character varying(100) NOT NULL,
    message character varying(1000) NOT NULL,
    CONSTRAINT dm_pkey PRIMARY KEY (uid)
)
WITH (OIDS=FALSE);

CREATE TRIGGER new_dm AFTER INSERT ON dm_table FOR EACH ROW EXECUTE PROCEDURE table_update_notify();


CREATE OR REPLACE FUNCTION table_update_notify() RETURNS trigger AS $$
BEGIN
  PERFORM pg_notify('table_update', json_build_object('table', TG_TABLE_NAME,'type', TG_OP,'data',row_to_json(NEW))::text);
  RETURN NEW;
END;
$$ LANGUAGE plpgsql;

 `{"uid":"5c26225f-8515-48d8-aa6c-f9140a5dc60b",
 "user_id":"104356318642505278668",
 "timestamp":"2016-10-17",
 "room":"Global",
 "message":"tesgssdgf"}`



        SELECT user.id,COALESCE(to_char(chat.timestamp, 'MM-DD-YYYY HH24:MI:SS'), ''),chat.room,chat.message,
        , user.name, user.picture
        FROM chat_table as chat
        JOIN user_table as user ON (chat_table.user_id = user_table.id)